name: CI/CD

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build_FOR_UBUNTU:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - run: |
          sudo apt-get update && sudo apt-get install -y libboost-test-dev libglfw3-dev libglm-dev || { echo 'Failed to install dependencies'; exit 1; }   
      
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      
      - run: cmake --build .
      
      - run: cmake --build . --target test
      
      - run: cmake --build . --target package

      # Check if the release already exists
      - name: Check if release exists
        id: check_release_exists
        run: |
          TAG="release-${{ github.run_number }}-${{ github.sha }}"
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG")
          if [ "$RESPONSE" -eq 200 ]; then
            echo "release_exists=true" >> $GITHUB_ENV
          else
            echo "release_exists=false" >> $GITHUB_ENV
          fi

      # Create Release only if it does not exist
      - name: Create Release
        id: create_release
        if: env.release_exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-${{ github.run_number }}-${{ github.sha }}"
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false 

      # Upload Release Asset 
      - name: Upload Release Asset 
        id: upload-release-asset 
        if: env.release_exists == 'false'
        uses: actions/upload-release-asset@v1  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb  
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb  
          asset_content_type: application/vnd.debian.binary-package 

  build_FOR_MACOC:
    runs-on: macos-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - run: |
          brew update && brew install boost glfw glm || { echo 'Failed to install dependencies'; exit 1; }
      
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      
      - run: cmake --build .
      
      - run: cmake --build . --target test
      
      - run: cmake --build . --target package

      # Check if the release already exists for macOS 
      - name: Check if release exists for macOS 
        id: check_release_exists_macos 
        run: |
          TAG="release-${{ github.run_number }}-${{ github.sha }}"
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG")
          if [ "$RESPONSE" -eq 200 ]; then
            echo "release_exists=true" >> $GITHUB_ENV;
          else
            echo "release_exists=false" >> $GITHUB_ENV;
          fi

      # Create Release for macOS only if it does not exist
      - name: Create Release for macOS
        id: create_release_macos
        if: env.release_exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-${{ github.run_number }}-${{ github.sha }}"
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false 

      # Upload Release Asset for macOS 
      - name: Upload Release Asset for macOS 
        id: upload-release-asset-macos 
        if: env.release_exists == 'false'
        uses: actions/upload-release-asset@v1  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:
          upload_url: ${{ steps.create_release_macos.outputs.upload_url }}  
          asset_path: ./helloworld-0.0.${{ github.run_number }}-macOS.pkg  # Укажите правильный путь к пакету для macOS.
          asset_name: helloworld-0.0.${{ github.run_number }}-macOS.pkg  # Укажите имя файла для macOS.
          asset_content_type: application/octet-stream  # Укажите правильный тип контента.