name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build_for_ubuntu:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Boost
        run: sudo apt-get update && sudo apt-get install -y libboost-test-dev

      - name: Configure CMake
        run: cmake . -DPATCH_VERSION=${{ github.run_number }}

      - name: Build
        run: cmake --build .

      - name: Run Tests
        run: cmake --build . --target test

      - name: Package
        run: cmake --build . --target package

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb # Ensure this matches your CMake output.
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

  build_for_macos:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Boost via Homebrew
        run: brew install boost # You can also use brew install boost-test if you want only the test library.

      - name: Configure CMake for macOS
        run: cmake . -DPATCH_VERSION=${{ github.run_number }}

      - name: Build for macOS
        run: cmake --build .

      - name: Run Tests for macOS
        run: cmake --build . --target test

      - name: Package for macOS
        run: cmake --build . --target package

      - name: Create Release for macOS
        id: create_release_macos
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset for macOS
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_macos.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-macOS.pkg # Ensure this matches your CMake output.
          asset_name: helloworld-0.0.${{ github.run_number }}-macOS.pkg # Ensure this matches your CMake output.
          asset_content_type: application/x-apple-pkg # Correct content type for macOS pkg files.